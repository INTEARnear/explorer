"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/token/[address]/page",{

/***/ "(app-pages-browser)/./utils.tsx":
/*!*******************!*\
  !*** ./utils.tsx ***!
  \*******************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertFloatToInt: function() { return /* binding */ convertFloatToInt; },\n/* harmony export */   convertIntToFloat: function() { return /* binding */ convertIntToFloat; },\n/* harmony export */   formatNumber: function() { return /* binding */ formatNumber; },\n/* harmony export */   intToFloat: function() { return /* binding */ intToFloat; },\n/* harmony export */   timestampToTimeDifference: function() { return /* binding */ timestampToTimeDifference; },\n/* harmony export */   truncateString: function() { return /* binding */ truncateString; }\n/* harmony export */ });\nfunction timestampToTimeDifference(timestamp) {\n    /* timestamp is in nanoseconds, Date().getTime() in milliseconds */ timestamp = timestamp / 1000000;\n    const now = new Date().getTime();\n    let difference = Math.abs(now - timestamp);\n    const days = Math.floor(difference / (1000 * 60 * 60 * 24));\n    difference -= days * (1000 * 60 * 60 * 24);\n    const hours = Math.floor(difference / (1000 * 60 * 60));\n    difference -= hours * (1000 * 60 * 60);\n    const minutes = Math.floor(difference / (1000 * 60));\n    difference -= minutes * (1000 * 60);\n    const seconds = Math.floor(difference / 1000);\n    if (days > 0) {\n        return \"\".concat(days, \"d \").concat(hours, \"h ago\");\n    } else if (hours > 0) {\n        return \"\".concat(hours, \"h \").concat(minutes, \"m ago\");\n    } else if (minutes > 0) {\n        return \"\".concat(minutes, \"m \").concat(seconds, \"s ago\");\n    }\n    return \"\".concat(seconds, \"s ago\");\n}\nfunction convertIntToFloat(amount, decimals) {\n    const digitsAmount = amount.length;\n    let result;\n    if (digitsAmount <= decimals) {\n        const additionalZeros = \"0\".repeat(decimals - digitsAmount);\n        result = \"0.\".concat(additionalZeros).concat(amount);\n    } else {\n        const index = digitsAmount - decimals;\n        result = \"\".concat(amount.slice(0, index), \".\").concat(amount.slice(index));\n    }\n    // Remove trailing zeros after comma and remove the comma if it's the last character\n    if (result.includes(\".\")) {\n        result = result.replace(/(\\.\\d*?)0+$/, \"$1\").replace(/\\.$/, \"\");\n    }\n    return result;\n}\nfunction intToFloat(amount, decimals) {\n    let number = parseFloat(amount);\n    let result = number * Math.pow(10, -decimals);\n    return result.toString();\n}\nfunction convertFloatToInt(input, decimals) {\n    // Replace a comma with a dot to standardize the separator\n    input = input.replace(\",\", \".\");\n    if (input.includes(\".\")) {\n        // Split the number into integer and fractional parts\n        let [integerPart, fractionalPart] = input.split(\".\");\n        // Calculate the number of zeros to add\n        let zerosToAdd = decimals - fractionalPart.length;\n        // If there are more digits than decimals, truncate the fractional part\n        if (zerosToAdd < 0) {\n            fractionalPart = fractionalPart.slice(0, decimals);\n            zerosToAdd = 0;\n        }\n        // Remove the dot and add the zeros\n        return integerPart + fractionalPart + \"0\".repeat(zerosToAdd);\n    } else {\n        // No separator present, just add `decimals` number of zeros\n        return input + \"0\".repeat(decimals);\n    }\n}\nfunction truncateString(str, length) {\n    if (str.length > length) {\n        return str.substring(0, length) + \"...\";\n    }\n    return str;\n}\nfunction formatNumber(number) {\n    number = Number(number);\n    let outputNumber = 0;\n    if (number > -1 && number < 1) {\n        outputNumber = Number(number.toFixed(3));\n    } else if (number > -10 && number < 10) {\n        outputNumber = Number(number.toFixed(2));\n    } else if (number > -100 && number < 100) {\n        outputNumber = Number(number.toFixed(1));\n    } else {\n        outputNumber = Number(number.toFixed(0));\n    }\n    return outputNumber.toLocaleString(\"en-US\");\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./utils.tsx\n"));

/***/ })

});